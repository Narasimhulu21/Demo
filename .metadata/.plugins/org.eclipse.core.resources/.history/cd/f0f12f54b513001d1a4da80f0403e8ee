package esmsapp;

import java.awt.Robot;
import java.awt.event.KeyEvent;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import java.util.concurrent.TimeUnit;
import org.openqa.selenium.support.ui.Select;
//import org.apache.bcel.generic.Select;
import org.openqa.selenium.support.ui.Wait;
import org.apache.poi.ss.usermodel.DataFormatter;
import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.ISelect;
import org.openqa.selenium.support.ui.WebDriverWait;

import com.aventstack.extentreports.Status;
import com.google.gson.annotations.Until;

import FrameworkCode.BFrameworkQueryObjects;

public class Login {
	

	public void login(WebDriver driver, BFrameworkQueryObjects queryObjects) throws Exception {
		

		driver.navigate().to("http://54.189.239.147/eSMS/fedex/");

		// queryObjects.logStatus(driver, Status.FAIL, "Login to ESMSAPP
		// Application","LoginSuccess", null);
		String Usernm = queryObjects.getTestData("userName");
		driver.findElement(By.xpath("//*[@class ='username']//*[@placeholder = 'Employee ID / Email ID']")).sendKeys(Usernm);
		driver.findElement(By.xpath(".//*[@placeholder='Password']")).sendKeys(queryObjects.getTestData("password"));
		Thread.sleep(1000);
		driver.findElement(By.xpath("//button[@class='btn mat-button']")).click();
		Thread.sleep(1000);
		queryObjects.logStatus(driver, Status.PASS, "Login to ESMSAPP Application", "LoginSuccess", null);
	}


	public void SelfSeat(WebDriver driver, BFrameworkQueryObjects queryObjects) throws Exception {
		
		
		Thread.sleep(10000);

		driver.findElement(By.xpath("//*[@class='menu-img']//*[contains(text(), 'Request / Reserve ')]")).click();
		Thread.sleep(1000);

		//Request type Radio button for seat
		if (driver.findElement(By.xpath("//*[@class='mat-radio-container']//input[@type = 'radio']")).isSelected()) {
			System.out.println("Request Type as Seat");
		} else {
			driver.findElement(By.xpath("//*[@class='mat-radio-container']//input[@type = 'radio']")).click();
		}

		//Requested for Self Radio button
		if (driver.findElement(By.xpath("//*[@class='mat-radio-container']//input[@id='mat-radio-6-input']")).isSelected()) {
			System.out.println("Request For as Self");

		} else {
			driver.findElement(By.xpath("//*[@class='mat-radio-container']//input[@id='mat-radio-6-input']")).click();
		}

		// Getting the Country
		WebElement Country = driver.findElement(By.xpath("//mat-select[contains(@placeholder,'Country')]")); 
		System.out.println(Country.getText());
		queryObjects.logStatus(driver, Status.PASS, "Login to ESMSAPP Application", "LoginSuccess", null);
	}
	
	public void Location(WebDriver driver, BFrameworkQueryObjects queryObjects) throws Exception {
	
		String Building = queryObjects.getTestData("building");
		String Floor = queryObjects.getTestData("floor");
		String selectyear = queryObjects.getTestData("Start_Date_Year");
		String selectmonth = queryObjects.getTestData("Start_Date_Month");
		String selectday = queryObjects.getTestData("Start_Date_Day");

		String selectEyear = queryObjects.getTestData("End_Date_Year");
		String selectEmonth = queryObjects.getTestData("End_Date_Month");
		String selectEday = queryObjects.getTestData("End_Date_Day");
		
		// Getting the City
		WebElement City =driver.findElement(By.xpath("//mat-select[contains(@placeholder,'City')]"));
		System.out.println(City.getText());
		
		// For Building Selection
		/*
		 * driver.findElement(By.xpath("//mat-select[contains(@placeholder,'Building')]"
		 * )).click(); Thread.sleep(0);
		 * 
		 * List <WebElement> buildings =
		 * driver.findElements(By.xpath("//*[@id=\"cdk-overlay-1\"]/div/div"));
		 * 
		 * buildings = new ArrayList<>(); System.out.println( buildings.get(0));
		 * Thread.sleep(0); buildings.get(0).click();
		 */
		
			
			
		
		  driver.findElement(By.xpath("//mat-select[contains(@placeholder,'Building')]")).click();
		  WebDriverWait wait = new WebDriverWait(driver, 10);
		  wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath( "//*[@role='option']//span[contains(text(),'" + Building + "')]"))).click();
		 

		// For Floor Selection
		
		driver.findElement(By.xpath("//*[@placeholder ='Floor *']")).click();
		//List<WebElement> Floornums = driver.findElements(By.xpath("//*[@role='option']//span[contains(text(),'" + Floor + "')]"));
		//System.out.println(Floornums);
		 WebDriverWait wait1 = new WebDriverWait(driver, 10);
		wait1.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//*[@role='option']//span[contains(text(),'" + Floor + "')]"))).click();
		
		
		

		// Locating StartDate on calendar
		driver.findElement(By.xpath("//*[@aria-label='Open calendar']//*[contains(@class, 'mat-datepicker-toggle-default-icon')]")).click();
		driver.findElement(By.xpath("//*[@aria-label='Choose month and year']//*[contains(@class, 'mat-button-wrapper')]")).click();
		// wait.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//div[conatins(text(),
		// '"+selectyear+"')]and contains(@class, 'mat-calendar-body-cell-content')")));
		driver.findElement(By.xpath("//div[contains(text(), '" + selectyear + "')and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		driver.findElement(By.xpath("//div[contains(text(), '" + selectmonth + "')and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		driver.findElement(By.xpath("//div[contains(text(), '" + selectday + "')and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		// focus on StartHour
		WebElement del = driver.findElement(By.xpath("//*[@formcontrolname='hour']"));
		String value = del.getAttribute("value");
		if (value != null) {
			int valLen = value.length();
			for (int i = 0; i < valLen; i++) {
				del.sendKeys(Keys.BACK_SPACE);

			}
		}
		String selectHour = queryObjects.getTestData("Start_Date_Hour");
		driver.findElement(By.xpath("//*[@formcontrolname='hour']")).sendKeys(selectHour);

		// focus on StartMin
		WebElement del1 = driver.findElement(By.xpath("//*[@formcontrolname='minute']"));
		String value1 = del1.getAttribute("value");
		if (value1 != null) {
			int valLen = value1.length();
			for (int i = 0; i < valLen; i++) {
				del1.sendKeys(Keys.BACK_SPACE);

			}
		}
		String selectMin = queryObjects.getTestData("Start_Date_Min");
		driver.findElement(By.xpath("//*[@formcontrolname='minute']")).sendKeys(selectMin);

		driver.findElement(By.xpath("//mat-icon[text()='done']")).click();

		// Locating EndDate on calendar
		driver.findElement(By.cssSelector(".date-picker > div:nth-of-type(2) > div > mat-form-field > div > div > div:nth-of-type(2) > mat-datepicker-toggle > button > span > svg")).click();
		driver.findElement(By.xpath("//*[@aria-label='Choose month and year']//*[contains(@class, 'mat-button-wrapper')]")).click();

		driver.findElement(By.xpath("//div[contains(text(), '" + selectEyear+ "') and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		driver.findElement(By.xpath("//div[contains(text(), '" + selectEmonth+ "') and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		driver.findElement(By.xpath("//div[contains(text(), '" + selectEday + "') and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		// focus on EndHour
		WebElement del3 = driver.findElement(By.xpath("//*[@formcontrolname='hour']"));
		String value3 = del3.getAttribute("value");
		if (value3 != null) {
			int valLen = value3.length();
			for (int i = 0; i < valLen; i++) {
				del3.sendKeys(Keys.BACK_SPACE);

			}
		}
		String selectEndHour = queryObjects.getTestData("End_Date_Hour");
		driver.findElement(By.xpath("//*[@formcontrolname='hour']")).sendKeys(selectEndHour);
		// focus on EndMin
		WebElement del4 = driver.findElement(By.xpath("//*[@formcontrolname='minute']"));
		String value4 = del4.getAttribute("value");
		if (value4 != null) {
			int valLen = value4.length();
			for (int i = 0; i < valLen; i++) {
				del4.sendKeys(Keys.BACK_SPACE);

			}
		}
		String selectEndMin = queryObjects.getTestData("End_Date_Min");
		driver.findElement(By.xpath("//*[@formcontrolname='minute']")).sendKeys(selectEndMin);
		Thread.sleep(3000);
		driver.findElement(By.xpath("//mat-icon[text()='done']")).click();
		queryObjects.logStatus(driver, Status.PASS,"Building" +Building+ " Validated", "Building Selected Successfully", null);
		
		
		
		
	}
	public void Recurring(WebDriver driver, BFrameworkQueryObjects queryObjects) throws Exception {
		
		String 	recurringstartyear = queryObjects.getTestData("Recur_Start_Date_Year");
		String recurringstartdate = queryObjects.getTestData("Recur_Start_Date_Month");
		String recurringstartday = queryObjects.getTestData("Recur_Start_Date_Day");
		
		String 	recurringendyear = queryObjects.getTestData("Recur_End_Date_Year");
		String recurringenddate = queryObjects.getTestData("Recur_End_Date_Month");
		String recurringendday = queryObjects.getTestData("Recur_End_Date_Day");
		
		String 	Monday = queryObjects.getTestData("Monday");
		String Tuesday = queryObjects.getTestData("Tuesday");
		String Wednesday = queryObjects.getTestData("Wednesday");
		String Thursday = queryObjects.getTestData("Thursday");
		String Friday = queryObjects.getTestData("Friday");
		
		//Recurring
		Thread.sleep(3000);
		driver.findElement(By.xpath("//span[@translate='fp.make.recurring']")).click();
		Thread.sleep(3000);
		//Start date
		driver.findElement(By.xpath("//app-recurrance-popup/form/div//*[contains(@class,'mat-form-field-suffix')]")).click();
		driver.findElement(By.xpath("//*[@aria-label='Choose month and year']//*[contains(@class, 'mat-button-wrapper')]")).click();
		driver.findElement(By.xpath("//div[contains(text(), '" + recurringstartyear+ "') and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		driver.findElement(By.xpath("//div[contains(text(), '" + recurringstartdate+ "') and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		driver.findElement(By.xpath("//div[contains(text(), '" + recurringstartday + "') and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		//End date
		driver.findElement(By.xpath("//mat-form-field[@fxflex='47']//*[contains(@class,'mat-form-field-suffix ng-tns')]")).click();
		driver.findElement(By.xpath("//*[@aria-label='Choose month and year']//*[contains(@class, 'mat-button-wrapper')]")).click();
		driver.findElement(By.xpath("//div[contains(text(), '" + recurringendyear+ "') and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		driver.findElement(By.xpath("//div[contains(text(), '" + recurringenddate+ "') and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		driver.findElement(By.xpath("//div[contains(text(), '" + recurringendday + "') and contains(@class, 'mat-calendar-body-cell-content')]")).click();
		//List<WebElement> Recurringdays = driver.findElements(By.xpath("//*[@id=\"mat-dialog-0\"]/app-recurrance-popup/form/div/div[1]/div[2]/div"));
		
		
		//div[@fxlayoutalign='center center']/div/button/span[contains(text(),'" + Tuesday + "')]
		driver.findElement(By.xpath("//button[contains(@class,'mat-mini-fab mat-accent')]/span[contains(text(),'" + Monday + "')]")).click();
		driver.findElement(By.xpath("//div[@fxlayoutalign='center center']/div/button/span[contains(text(),'" + Tuesday + "')]")).click();
		driver.findElement(By.xpath("//button[contains(@class,'mat-mini-fab mat-accent')]/span[contains(text(),'" + Wednesday + "')]")).click();
		//driver.findElement(By.xpath("//button[contains(@class,'mat-mini-fab mat-accent')]/span[contains(text(),'" + Thursday + "')]")).click();
		//driver.findElement(By.xpath("//div[@fxlayoutalign='center center']/div/button/span[contains(text(),'" + Friday + "')]")).click();
		driver.findElement(By.xpath("//span[@translate='fp.save']")).click();
		WebElement recurringtext = driver.findElement(By.xpath(""));
		queryObjects.logStatus(driver, Status.PASS, Monday+ Tuesday + Wednesday +"Recurring days Selected successfully", "Recurring booking", null);
	}
		
	public void SeatSelection(WebDriver driver, BFrameworkQueryObjects queryObjects) throws Exception {
		String seats = queryObjects.getTestData("Seats");
		String Building = queryObjects.getTestData("building");
		 //Seats
        driver.findElement(By.xpath("//span[text()='Seats']")).click();
        
        WebElement selectElement = driver.findElement(By.xpath("//span[text()='Seats']"));
        Select selectObject = new Select(selectElement);
        selectObject.selectByIndex(1);
       // WebDriverWait wait2 =new WebDriverWait(driver,10);
       // wait2.until(ExpectedConditions.visibilityOfElementLocated(By.xpath("//mat-option[@role='option']//span[contains(text(),'"+seats+"')]"))).click();

        //Submit
        driver.findElement(By.xpath("//span[text()='Submit']")).click();
        Thread.sleep(3000);
        driver.findElement(By.xpath("//button[@class=\"logoutbtn mat-button ng-star-inserted\"]//span[text()='Submit']")).click();
        Thread.sleep(5000);
        WebElement buildingReqSmry = driver.findElement(By.xpath("//label[contains(text(),'Garhoud-Operations')]"));
        if (Building == buildingReqSmry.getText() ) {
			queryObjects.logStatus(driver, Status.PASS, Building+"validated", "Building selected Successfully", null);
		}
		else {
			queryObjects.logStatus(driver, Status.FAIL, Building+"validated", "Building not selected", null);
		}
    
        driver.findElement(By.xpath("//img[@class = 'profile-img']")).click();
        driver.findElement(By.xpath("//span[@translate = 'fp.sign.out']")).click();
        
        driver.close();
        
        queryObjects.logStatus(driver, Status.PASS,"Seat number" +seats+ " Validated", "Seat Selected Successfully", null);
		
	}
	
		/*
		 * }
		 * 
		 * 
		 * 
		 * 
		 * 
		 * public void recurringself(WebDriver driver, BFrameworkQueryObjects
		 * queryObjects) throws Exception{
		 */

	
	
	

	
}
